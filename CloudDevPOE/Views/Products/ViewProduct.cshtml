@model CloudDevPOE.ViewModels.ProductDetailsViewModel
@{
	ViewData["Title"] = Model.ProductName;
	var imageUrlsJson = System.Text.Json.JsonSerializer.Serialize(Model.ImageUrls);
}

<head>
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css">
	<style>
		.product-page {
			display: flex;
			flex-direction: column;
			margin: 15px 0;
			padding: 10px;
			background-color: #f8f9fa;
			font-family: 'Arial', sans-serif;
		}

		.product-details {
			display: flex;
			gap: 20px;
		}

		.product-carousel-container {
			flex: 0 0 65%;
			display: flex;
			gap: 10px;
		}

		.product-thumbnails {
			display: flex;
			flex-direction: column;
			gap: 10px;
		}

			.product-thumbnails img {
				width: 80px;
				height: auto;
				object-fit: cover;
				border: 2px solid transparent;
				cursor: pointer;
			}

				.product-thumbnails img.active {
					border-color: #007bff;
				}

		.main-image {
			width: 500px;
			height: auto;
			object-fit: cover;
			border-radius: 10px;
		}

		.carousel-controls {
			display: flex;
			justify-content: space-between;
			width: 520px;
			margin-top: 10px;
		}

		.carousel-control {
			width: 30px;
			height: 30px;
			background-color: #007bff;
			border-radius: 50%;
			border: none;
			display: flex;
			align-items: center;
			justify-content: center;
			opacity: 0.5;
			cursor: pointer;
		}

		.back-link {
			color: #007bff;
			text-decoration: none;
			margin-bottom: 20px;
		}

			.back-link::before {
				content: "← ";
			}

		.product-info {
			flex: 0 0 35%;
			display: flex;
			flex-direction: column;
			gap: 10px;
		}

			.product-info h2 {
				margin: 0;
				font-size: 24px;
			}

			.product-info p {
				margin: 0;
				font-size: 18px;
			}

		.quantity-spinner {
			display: flex;
			gap: 5px;
			align-items: center;
		}

			.quantity-spinner input {
				width: 60px;
				text-align: center;
				padding: 5px;
			}

		.btn-primary {
			background-color: #007bff;
			border-color: #007bff;
		}
	</style>
</head>

<main class="product-page">
	<a href="@Url.Action("MyWork", "Products")" class="back-link">Back to Products Page</a>

	<div class="product-details">
		<div class="product-carousel-container">
			<div class="product-thumbnails">
				@for (var i = 0; i < Model.ImageUrls.Count; i++)
				{
					<img src="@Model.ImageUrls[i]" class="@(i == 0 ? "active" : "")" alt="Thumbnail" onclick="changeMainImage(this)">
				}
			</div>
			<div>
				<button class="carousel-control" id="prev-image" onclick="prevImage()">&#9664;</button>
			</div>
			<div class="main-image-container">
				<img id="main-image" src="@Model.ImageUrls[0]" class="main-image" alt="Product Image">
			</div>
			<div>
				<button class="carousel-control" id="next-image" onclick="nextImage()">&#9654;</button>
			</div>
		</div>

		<div class="product-info">
			<h2>@Model.ProductName</h2>
			<p><strong>Category:</strong> @Model.ProductCategory</p>
			<p>@Model.ProductDescription</p>
			<p><strong>Price:</strong> @Model.ProductPrice.ToString("C")</p>

			<div class="quantity-spinner">
				<label for="quantity">Quantity:</label>
				<input type="number" id="quantity" name="quantity" min="1" value="1">
			</div>

			<button class="btn btn-primary mt-3">Add to Cart</button>
		</div>
	</div>
</main>

@section Scripts {
	<script>
		var imageUrlsJson = '@Html.Raw(imageUrlsJson)';
		var images = JSON.parse(imageUrlsJson);
		let currentIndex = 0;

		function changeMainImage(img) {
			var index = Array.from(document.querySelectorAll('.product-thumbnails img')).indexOf(img);
			currentIndex = index;
			document.getElementById('main-image').src = images[index];
			document.querySelectorAll('.product-thumbnails img').forEach((img, i) => {
				img.classList.toggle('active', i === index);
			});
		}


		function prevImage() {
			currentIndex = (currentIndex - 1 + images.length) % images.length;
			changeMainImage(currentIndex);
		}

		function nextImage() {
			currentIndex = (currentIndex + 1) % images.length;
			changeMainImage(currentIndex);
		}

		document.querySelectorAll('.product-thumbnails img').forEach((img, index) => {
			img.addEventListener('click', () => changeMainImage(index));
		});
	</script>
}
