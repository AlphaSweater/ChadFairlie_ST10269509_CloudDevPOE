@model CloudDevPOE.ViewModels.UserAccountViewModel

@{
	ViewData["Title"] = "Account";
}

<head>
	<style>
		.order-header {
			display: flex;
			justify-content: space-between;
			align-items: center;
		}

			.order-header .btn-link {
				flex-grow: 1;
				text-align: left;
			}

		.cart-summary {
			position: fixed;
			top: 265px;
			right: 123px;
			background-color: #f8f9fa;
			border: 1px solid #ddd;
			padding: 20px;
			box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
			z-index: 1000;
			max-width: 300px;
		}
	</style>
</head>

<body>
	<div class="container mt-5">
		<h1>User Account</h1>
		<ul class="nav nav-tabs" id="accountTab" role="tablist">
			<li class="nav-item">
				<a class="nav-link active" id="account-details-tab" data-toggle="tab" href="#account-details" role="tab" aria-controls="account-details" aria-selected="true">Account Details</a>
			</li>
			<li class="nav-item">
				<a class="nav-link" id="order-history-tab" data-toggle="tab" href="#order-history" role="tab" aria-controls="order-history" aria-selected="false">Order History</a>
			</li>
			<li class="nav-item">
				<a class="nav-link" id="my-listings-tab" data-toggle="tab" href="#my-listings" role="tab" aria-controls="my-listings" aria-selected="false">My Listings</a>
			</li>
			<li class="nav-item">
				<a class="nav-link" id="cart-tab" data-toggle="tab" href="#cart" role="tab" aria-controls="cart" aria-selected="false">Cart</a>
			</li>
		</ul>
		<div class="tab-content" id="accountTabContent">
			<!-- Account Details Tab -->
			<div class="tab-pane fade show active" id="account-details" role="tabpanel" aria-labelledby="account-details-tab">
				<form method="post" action="@Url.Action("UpdateAccountDetails", "User")">
					<div class="form-group">
						<label for="Name">Name</label>
						<input type="text" class="form-control" id="Name" name="Name" value="@Model.Name" />
					</div>
					<div class="form-group">
						<label for="Email">Email</label>
						<input type="email" class="form-control" id="Email" name="Email" value="@Model.Email" />
					</div>
					<button type="submit" class="btn btn-primary">Update Details</button>
				</form>
			</div>
			<!-- Order History Tab -->
			<div class="tab-pane fade" id="order-history" role="tabpanel" aria-labelledby="order-history-tab">
				<div class="accordion" id="orderAccordion">
					@foreach (var order in Model.PastOrders)
					{
						<div class="card">
							<div class="card-header" id="heading-@order.Cart.CartID">
								<div class="order-header">
									<button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapse-@order.Cart.CartID" aria-expanded="true" aria-controls="collapse-@order.Cart.CartID">
										Order ID: @order.Cart.CartID - Date: @order.TransactionDate - Total: @order.TotalValue.ToString("C", new System.Globalization.CultureInfo("en-ZA"))
									</button>
								</div>
							</div>

							<div id="collapse-@order.Cart.CartID" class="collapse" aria-labelledby="heading-@order.Cart.CartID" data-parent="#orderAccordion">
								<div class="card-body">
									<table class="table mt-3">
										<thead>
											<tr>
												<th>Image</th>
												<th>Product Name</th>
												<th>Quantity</th>
												<th>Single Price</th>
												<th>Total Price</th>
											</tr>
										</thead>
										<tbody>
											@foreach (var item in order.Cart.Items)
											{
												<tr>
													<td><img src="@item.ImageUrl" alt="@item.ProductName" class="img-thumbnail" width="50" height="auto" /></td>
													<td>@item.ProductName</td>
													<td>@item.Quantity</td>
													<td>@item.Price.ToString("C", new System.Globalization.CultureInfo("en-ZA"))</td>
													<td>@((item.Price * item.Quantity).ToString("C", new System.Globalization.CultureInfo("en-ZA")))</td>
												</tr>
											}
										</tbody>
									</table>
								</div>
							</div>
						</div>
					}
				</div>
			</div>
			<!-- My Listings Tab -->
			<div class="tab-pane fade" id="my-listings" role="tabpanel" aria-labelledby="my-listings-tab">
				<table class="table mt-3">
					<thead>
						<tr>
							<th>Product ID</th>
							<th>Name</th>
							<th>Price</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var product in Model.ListedProducts)
						{
							<tr>
								<td>@product.ProductID</td>
								<td>@product.ProductName</td>
								<td>@product.ProductPrice.ToString("C", new System.Globalization.CultureInfo("en-ZA"))</td>
								<td>
									<a href="@Url.Action("EditProduct", "Products", new { id = product.ProductID })" class="btn btn-sm btn-warning">Edit</a>
									<a href="@Url.Action("DeleteProduct", "Products", new { id = product.ProductID })" class="btn btn-sm btn-danger">Delete</a>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
			<!-- Cart Tab -->
			<div class="tab-pane fade" id="cart" role="tabpanel" aria-labelledby="cart-tab">
				<div class="table-responsive mt-3">
					<table class="table table-striped">
						<thead>
							<tr>
								<th>Product</th>
								<th>Quantity</th>
								<th>Price</th>
								<th>Total</th>
								<th>Actions</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var item in Model.ActiveCart.Items)
							{
								<tr>
									<td><img src="@item.ImageUrl" alt="@item.ProductName" class="img-thumbnail" width="100" height="auto" /></td>
									<td>@item.ProductName</td>
									<td>
										<input type="number" class="form-control quantity-input" data-cart-item-id="@item.CartItemID" data-item-price="@item.Price" value="@item.Quantity" min="1" max="@item.AvailableQuantity" />
									</td>
									<td class="item-price">@item.Price.ToString("C", new System.Globalization.CultureInfo("en-ZA"))</td>
									<td class="item-total" data-cart-item-id="@item.CartItemID">@((item.Price * item.Quantity).ToString("C", new System.Globalization.CultureInfo("en-ZA")))</td>
									<td>
										<a href="@Url.Action("RemoveCartItem", "User", new { cartItemId = item.CartItemID })" class="RemoveItem btn btn-sm btn-danger">Remove</a>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
				<div class="cart-summary">
					<h3>Cart Total</h3>
					<div class="d-flex justify-content-between align-items-center mb-3">
						<span>Total:</span>
						<span id="cart-total-summary">@Model.ActiveCart.TotalValue.ToString("C", new System.Globalization.CultureInfo("en-ZA"))</span>
					</div>
					<button class="CheckOut btn btn-primary btn-block">Checkout</button>
				</div>
			</div>
		</div>
	</div>

	<script>
		$(document).ready(function () {
			$('.quantity-input').on('change', function () {
				var cartItemId = $(this).data('cart-item-id');
				var quantity = $(this).val();
				var itemPrice = $(this).data('item-price');

				$.ajax({
					url: '/User/UpdateCartQuantity',
					type: 'POST',
					async: true,
					data: {
						cartItemId: cartItemId,
						quantity: quantity
					},
					success: function (result) {
						$('#cart-total').text(result.newTotal);
						$('#cart-total-summary').text(result.newTotal);

						// Update the total price for the item
						var itemTotal = itemPrice * quantity;
						var formattedTotal = new Intl.NumberFormat('en-ZA', { style: 'currency', currency: 'ZAR' }).format(itemTotal);
						formattedTotal = formattedTotal.replace(/^(\D+)\s/, '$1');
						$('.item-total[data-cart-item-id="' + cartItemId + '"]').text(formattedTotal);
					}
				});
			});


			$('.RemoveItem').on('click', function (event) {
				event.preventDefault();
				var url = $(this).attr('href');

				Swal.fire({
					title: 'Are you sure?',
					text: "You won't be able to revert this!",
					icon: 'warning',
					showCancelButton: true,
					confirmButtonText: 'Yes, remove it!',
					cancelButtonText: 'No, cancel'
				}).then((result) => {
					if (result.isConfirmed) {
						$.ajax({
							url: url,
							type: 'POST',
							async: true,
							success: function (result) {
								$('#cart-total').text(result.newTotal);
								$('#cart-total-summary').text(result.newTotal);

								// Remove the item row from the table
								$(event.target).closest('tr').remove();
							}
						});
						Swal.fire(
							'Removed!',
							'Your item has been removed.',
							'success'
						);
					}
				});
			});

			$('.CheckOut').on('click', function (event) {
				event.preventDefault();

				// Check if there are any items in the cart
				if ($('table.table-striped tbody tr').length === 0) {
					Swal.fire({
						icon: 'info',
						title: 'Your cart is empty',
						text: 'Please add some items to your cart before checking out.',
					});
					return;
				}

				// Confirm checkout action
				Swal.fire({
					title: 'Proceed to Checkout?',
					text: "Are you sure you want to proceed to checkout?",
					icon: 'question',
					showCancelButton: true,
					confirmButtonText: 'Yes, checkout!',
					cancelButtonText: 'No, cancel'
				}).then((result) => {
					if (result.isConfirmed) {
						// Disable the checkout button
						$(this).prop('disabled', true);

						$.ajax({
							url: '/User/CheckoutCart',
							type: 'POST',
							async: true,
							success: function (result) {
								Swal.fire(
									'Success!',
									'Your order has been placed.',
									'success'
								).then(() => {
									location.reload();
								});
							},
							error: function () {
								Swal.fire({
									icon: 'error',
									title: 'Oops...',
									text: 'An error occurred during checkout.',
								});

								// Re-enable the checkout button
								$('.CheckOut').prop('disabled', false);
							}
						});
					}
				});
			});
		});
	</script>
</body>